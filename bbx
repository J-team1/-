import tkinter #导入tkinter模块

root = tkinter.Tk()
root.minsize(280,395)
root.maxsize(280,395)
root.title('百宝箱计算器')#显示标题
a=0
#界面布局
#显示面板
result = tkinter.StringVar()
result.set(0)#显示面板显示结果1，用于显示默认数字0
result2 = tkinter.StringVar()#显示面板显示结果2，用于显示计算过程
result2.set('')
#显示版
label = tkinter.Label(root,font = ('微软雅黑',20),bg = '#EEE9E9',bd ='9',fg = '#828282',anchor = 'se',textvariable = result2)
label.place(y=0,width = 280,height = 60)
label2 = tkinter.Label(root,font = ('微软雅黑',30),bg = '#EEE9E9',bd ='9',fg = 'black',anchor = 'se',textvariable = result)
label2.place(y = 60,width = 280,height = 60)

#功能菜单
men =tkinter.Menu(root)#创建菜单
men.add_command(label ="金融",command = lambda :pressModel('金融'))
men.add_command(label ="功能2",command = lambda :pressModel('金融'))
men.add_command(label ="功能3",command = lambda :pressModel('金融'))
men.add_command(label ="单位换算",command = lambda :pressModel('单位换算'))
men.add_command(label ="函数运算",command = lambda :pressModel('函数运算'))
men.add_command(label ="进制换算",command = lambda :pressModel('进制换算'))
men.add_command(label ="返回",command = lambda :pressModel('返回'))

root.config(menu = men)

#数字键按钮
btn7 = tkinter.Button(root,text = '7',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('7'))
btn7.place(x = 0,y = 175,width = 70,height = 55)
btn8 = tkinter.Button(root,text = '8',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('8'))
btn8.place(x = 70,y = 175,width = 70,height = 55)
btn9 = tkinter.Button(root,text = '9',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('9'))
btn9.place(x = 140,y = 175,width = 70,height = 55)

btn4 = tkinter.Button(root,text = '4',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('4'))
btn4.place(x = 0,y = 230,width = 70,height = 55)
btn5 = tkinter.Button(root,text = '5',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('5'))
btn5.place(x = 70,y = 230,width = 70,height = 55)
btn6 = tkinter.Button(root,text = '6',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('6'))
btn6.place(x = 140,y = 230,width = 70,height = 55)

btn1 = tkinter.Button(root,text = '1',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('1'))
btn1.place(x = 0,y = 285,width = 70,height = 55)
btn2 = tkinter.Button(root,text = '2',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('2'))
btn2.place(x = 70,y = 285,width = 70,height = 55)
btn3 = tkinter.Button(root,text = '3',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('3'))
btn3.place(x = 140,y = 285,width = 70,height = 55)
btn0 = tkinter.Button(root,text = '0',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda : pressNum('0'))
btn0.place(x = 70,y = 340,width = 70,height = 55)


#运算符号按钮
#开始界面运算符
btnac = tkinter.Button(root,text = 'AC',bd = 0.5,font = ('黑体',20),fg = 'orange',command = lambda :pressCompute('AC'))
btnac.place(x = 0,y = 120,width = 70,height = 55)
btnback = tkinter.Button(root,text = '←',font = ('微软雅黑',20),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('b'))
btnback.place(x = 70,y = 120,width = 70,height = 55)
btna = tkinter.Button(root,text = '÷',font = ('微软雅黑',20),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('/'))
btna.place(x = 140,y = 120,width = 70,height = 55)
btnb = tkinter.Button(root,text ='×',font = ('微软雅黑',20),fg = "#4F4F4F",bd = 0.5,command = lambda:pressCompute('*'))
btnb.place(x = 210,y = 120,width = 70,height = 55)
btnc = tkinter.Button(root,text = '-',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda:pressCompute('-'))
btnc.place(x = 210,y = 175,width = 70,height = 55)
btnd = tkinter.Button(root,text = '+',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda:pressCompute('+'))
btnd.place(x = 210,y = 230,width = 70,height = 55)
btnequ = tkinter.Button(root,text = '=',bg = 'orange',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda :pressEqual())
btnequ.place(x = 210,y = 285,width = 70,height = 110)
btne = tkinter.Button(root,text = '%',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda:pressCompute('%'))
btne.place(x = 0,y = 340,width = 70,height = 55)
btnpoint = tkinter.Button(root,text = '.',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda:pressCompute('.'))
btnpoint.place(x = 140,y = 340,width = 70,height = 55)
#各模式运算符切换
def pressModel(model):
    if model == '返回':
        btnac = tkinter.Button(root,text = 'AC',bd = 0.5,font = ('黑体',20),fg = 'orange',command = lambda :pressCompute('AC'))
        btnac.place(x = 0,y = 120,width = 70,height = 55)
        btnback = tkinter.Button(root,text = '←',font = ('微软雅黑',20),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('b'))
        btnback.place(x = 70,y = 120,width = 70,height = 55)
        btna = tkinter.Button(root,text = '÷',font = ('微软雅黑',20),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('/'))
        btna.place(x = 140,y = 120,width = 70,height = 55)
        btnb = tkinter.Button(root,text ='×',font = ('微软雅黑',20),fg = "#4F4F4F",bd = 0.5,command = lambda:pressCompute('*'))
        btnb.place(x = 210,y = 120,width = 70,height = 55)
        btnc = tkinter.Button(root,text = '-',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda:pressCompute('-'))
        btnc.place(x = 210,y = 175,width = 70,height = 55)
        btnd = tkinter.Button(root,text = '+',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda:pressCompute('+'))
        btnd.place(x = 210,y = 230,width = 70,height = 55)
        btnequ = tkinter.Button(root,text = '=',bg = 'orange',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda :pressEqual())
        btnequ.place(x = 210,y = 285,width = 70,height = 110)
        btne = tkinter.Button(root,text = '%',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda:pressCompute('%'))
        btne.place(x = 0,y = 340,width = 70,height = 55)
        btnpoint = tkinter.Button(root,text = '.',font = ('微软雅黑',20),fg = ('#4F4F4F'),bd = 0.5,command = lambda:pressCompute('.'))
        btnpoint.place(x = 140,y = 340,width = 70,height = 55)
    if model == '单位换算':
        btnback = tkinter.Button(root,text = '←',font = ('微软雅黑',20),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('b'))
        btnback.place(x = 210,y = 175,width = 70,height = 110) 
        btna = tkinter.Button(root,text = '℃->℉',bd = 0.5,font = ('微软雅黑',15),fg = '#4F4F4F',command = lambda :pressCompute('*9/5+32'))
        btna.place(x = 0,y = 120,width = 93,height = 27.5)
        btnb = tkinter.Button(root,text = '℉->℃',font = ('微软雅黑',15),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('/1.8-32/1.8'))
        btnb.place(x = 0,y = 147.5,width = 93,height = 27.5)
        btnc = tkinter.Button(root,text = 'm/s->km/h',font = ('微软雅黑',10),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('*3.6'))
        btnc.place(x = 93,y = 120,width = 93,height = 27.5)
        btnd = tkinter.Button(root,text = 'km/h->m/s',font = ('微软雅黑',10),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('/3.6'))
        btnd.place(x = 93,y = 147.5,width = 93,height = 27.5)
        btne = tkinter.Button(root,text = 'inch->cm',font = ('微软雅黑',10),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('*2.54'))
        btne.place(x = 186,y = 120,width = 94,height = 27.5)
        btnf = tkinter.Button(root,text = 'cm->inch',font = ('微软雅黑',10),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('/2.54'))
        btnf.place(x = 186,y = 147.5,width = 94,height = 27.5)       
        btnac = tkinter.Button(root,text = 'AC',font = ('微软雅黑',20),fg = 'orange',bd = 0.5,command = lambda:pressCompute('AC'))
        btnac.place(x = 0,y = 340,width = 70,height = 55)
    if model == '进制换算':
        btnback = tkinter.Button(root,text = '←',font = ('微软雅黑',20),fg = '#4F4F4F',bd = 0.5,command = lambda:pressCompute('b'))
        btnback.place(x = 210,y = 175,width = 70,height = 220) 
        btna = tkinter.Button(root,text = '10->2',bd = 0.5,font = ('微软雅黑',15),fg = '#4F4F4F',command = lambda:bin102())
        btna.place(x = 0,y = 120,width = 93,height = 27.5)
        btnb = tkinter.Button(root,text = '2->10',font = ('微软雅黑',15),fg = '#4F4F4F',bd = 0.5,command = lambda:int210())
        btnb.place(x = 0,y = 147.5,width = 93,height = 27.5)
        btnc = tkinter.Button(root,text = '2->8',font = ('微软雅黑',15),fg = '#4F4F4F',bd = 0.5,command = lambda:oct28())
        btnc.place(x = 93,y = 120,width = 93,height = 27.5)
        btnd = tkinter.Button(root,text = '8->2',font = ('微软雅黑',15),fg = '#4F4F4F',bd = 0.5,command = lambda:bin82())
        btnd.place(x = 93,y = 147.5,width = 93,height = 27.5)
        btne = tkinter.Button(root,text = '10->8',font = ('微软雅黑',15),fg = '#4F4F4F',bd = 0.5,command = lambda:oct108())
        btne.place(x = 186,y = 120,width = 94,height = 27.5)
        btnf = tkinter.Button(root,text = '8->10',font = ('微软雅黑',15),fg = '#4F4F4F',bd = 0.5,command = lambda:int810())
        btnf.place(x = 186,y = 147.5,width = 94,height = 27.5)       
        btnac = tkinter.Button(root,text = 'AC',font = ('微软雅黑',20),fg = 'orange',bd = 0.5,command = lambda:pressCompute('AC'))
        btnac.place(x = 0,y = 340,width = 70,height = 55)
    #if model == ''
    #if model == ''
    #if model == ''
    #if model == ''


#操作函数
lists = []#设置一个变量，保存运算数字和符号的列表
isPressSign = False#添加一个判断是否按下运算符号的标志,假设默认没有按下按钮
isPressNum = False
Models=[]
#数字函数
def pressNum(num):
    global lists
    global isPressSign
    if isPressSign == False:
        pass
    else:#重新将运算符号状态设置为否
        result.set(0)
        isPressSign = False

#判断界面的数字是否为0
    oldnum = result.get()#第一步
    if oldnum =='0':#如过界面上数字为0 则获取按下的数字
        result.set(num)
    else:#如果界面上的数字不是0  则链接上新按下的数字
            newnum = oldnum + num
            result.set(newnum)#将按下的数字写到面板中


#运算函数
def pressCompute(sign):
    global lists
    global isPressSign
    num = result.get()#获取界面数字
    lists.append(num)#保存界面获取的数字到列表中
    result.set('')
    lists.append(sign)#讲按下的运算符号保存到列表中
    isPressSign = True

    if sign =='AC':#如果按下的是'AC'按键，则清空列表内容，将屏幕上的数字键设置为默认数字0
        lists.clear()
        result.set(0)
    if sign =='b':#如果按下的是退格‘’，则选取当前数字第一位到倒数第二位
        a = num[0:-1]
        lists.clear()
        result.set(a)
#进制转换函数
def bin102():
    global lists
    
    curnum=result.get()
    lists.append(curnum)
    computrStr = ''.join(lists)
    endNum = bin(int(computrStr,10))
    result.set(endNum)
    result2.set(computrStr)
    lists.clear()
def int210():
    global lists
    
    curnum=result.get()
    lists.append(curnum)
    computrStr = ''.join(lists)
    endNum = int(computrStr,2)
    result.set(endNum)
    result2.set(computrStr)
    lists.clear()
def oct28():
    global lists
    
    curnum=result.get()
    lists.append(curnum)
    computrStr = ''.join(lists)
    endNum = oct(int(computrStr,2))
    result.set(endNum)
    result2.set(computrStr)
    lists.clear()
def bin82():
    global lists
    
    curnum=result.get()
    lists.append(curnum)
    computrStr = ''.join(lists)
    endNum = bin(int(computrStr,8))
    result.set(endNum)
    result2.set(computrStr)
    lists.clear()
def oct108():
    global lists
    
    curnum=result.get()
    lists.append(curnum)
    computrStr = ''.join(lists)
    endNum = oct(computrStr)
    result.set(endNum)
    result2.set(computrStr)
    lists.clear()
def int810():
    global lists
    
    curnum=result.get()
    lists.append(curnum)
    computrStr = ''.join(lists)
    endNum = int(computrStr,8)
    result.set(endNum)
    result2.set(computrStr)
    lists.clear()
#获取运算结果函数
def pressEqual():
    global lists
    global isPressSign


    curnum = result.get()#设置当前数字变量，并获取添加到列表
    lists.append(curnum)

    computrStr = ''.join(lists)#讲列表内容用join命令将字符串链接起来
    endNum = eval(computrStr)#用eval命令运算字符串中的内容
    endNum = '%.2f'%endNum
    result.set(endNum) #讲运算结果显示到屏幕1
    result2.set(computrStr)#将运算过程显示到屏幕2
    lists.clear()#清空列表内容


root.mainloop()
